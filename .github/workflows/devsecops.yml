name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  iac:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Instalar Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Ejecutar Trivy para IaC
        run: |
          trivy config . --exit-code 0 --severity LOW,MEDIUM,HIGH,CRITICAL
          
  sca:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar Maven
        run: sudo apt-get install -y maven

      - name: Ejecutar Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check-8.4.0-release.zip
          ./dependency-check/bin/dependency-check.sh --project gestor-bancario --scan . --disableAssembly

  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar Maven
        run: sudo apt-get install -y maven

      - name: Ejecutar análisis con SpotBugs
        run:  cd PAI2_ST10 && mvn clean install -Ddependency-check.skip=true spotbugs:check

  dast:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar Maven
        run: sudo apt-get install -y maven

      - name: Instalar dependencias
        run: |
          # Instalar dependencias
          cd PAI2_ST10 && mvn clean install  -DskipTests -Dspotbugs.skip=true -Ddependency-check.skip=true

      - name: Ejecutar el servidor SSL en segundo plano
        run: |
          # Ejecutar el servidor en segundo plano (con SSL)
          nohup java FileSSLServerSocket > server.log 2>&1 &

      - name: Esperar a que el servidor se inicie
        run: |
          # Espera a que el servidor esté disponible
          echo "Esperando a que el servidor inicie..."
          sleep 30

      - name: Ejecutar OWASP ZAP DAST
        run: |
          # Ejecutar las pruebas DAST con ZAP sobre HTTPS (con SSL)
           docker run --rm -u root -v $(pwd):/zap/wrk -t zaproxy/zap-stable zap-full-scan.py \
          -t https://host.docker.internal:3343 \
          -r zap-report.html
  
  iast:
      runs-on: ubuntu-latest
      steps:
        - name: Clonar repositorio
          uses: actions/checkout@v3
        
        - name: Configurar Java
          uses: actions/setup-java@v3
          with:
              distribution: 'temurin'
              java-version: '17'
        
        - name: Instalar Maven
          run: sudo apt-get install -y maven
        
        - name: Instalar dependencias
          run: |
                # Instalar dependencias
                cd PAI2_ST10 && mvn clean install -DskipTests -Dspotbugs.skip=true -Ddependency-check.skip=true
        
        - name: Instalar Semgrep
          run: |
                pip install semgrep
        
        - name: Ejecutar la aplicación con Semgrep IAST
          run: |
                # Ejecutar la aplicación en segundo plano (si no está corriendo aún)
                nohup java -jar target/mi-aplicacion.jar > app.log 2>&1 &
        
                # Esperar un momento para asegurarnos que la aplicación está corriendo
                echo "Esperando a que la aplicación inicie..."
                sleep 30
        
                # Ejecutar Semgrep IAST sobre la aplicación corriendo
                semgrep --config=auto --exclude target --exclude .git .
        
